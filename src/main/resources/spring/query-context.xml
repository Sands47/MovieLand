<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd">

    <bean id="getAllMoviesSQL" class="java.lang.String">
        <constructor-arg value="SELECT *
        FROM (SELECT t1.id, t1.name, t1.name_original, t1.release_year, t1.description, t1.rating, t1.price,
        GROUP_CONCAT(DISTINCT t2.genre_id ORDER BY t2.genre_id DESC SEPARATOR ',') genres,
        GROUP_CONCAT(DISTINCT t4.country_id ORDER BY t4.country_id DESC SEPARATOR ',') countries
        FROM movie t1
        LEFT JOIN movie_genre t2
        ON t1.id = t2.movie_id
        LEFT JOIN movie_country t4
        on t1.id = t4.movie_id
        GROUP BY t1.id, t1.name, t1.name_original, t1.release_year, t1.description, t1.rating, t1.price) t
        "/>
    </bean>

    <bean id="getMovieByIdSQL" class="java.lang.String">
        <constructor-arg value="SELECT t1.id, t1.name, t1.name_original, t1.release_year, t1.description, t1.rating, t1.price,
        GROUP_CONCAT(DISTINCT t2.genre_id ORDER BY t2.genre_id DESC SEPARATOR ',') genres,
        GROUP_CONCAT(DISTINCT t4.country_id ORDER BY t4.country_id DESC SEPARATOR ',') countries
        FROM movie t1
        LEFT JOIN movie_genre t2
        ON t1.id = t2.movie_id
        LEFT JOIN movie_country t4
        on t1.id = t4.movie_id
        WHERE t1.id = ?
        GROUP BY t1.id, t1.name, t1.name_original, t1.release_year, t1.description, t1.rating, t1.price;"/>
    </bean>

    <bean id="getReviewsByMovieIdSQL" class="java.lang.String">
        <constructor-arg value="SELECT t1.id, t1.movie_id, t1.user_id, t1.text, t2.first_name, t2.last_name
        FROM review t1
        join user t2
        on t1.user_id = t2.id
        WHERE t1.movie_id = ?;"/>
    </bean>

    <bean id="getReviewByIdSQL" class="java.lang.String">
        <constructor-arg value="SELECT t1.id, t1.movie_id, t1.user_id, t1.text
        FROM review t1
        WHERE t1.id = ?;"/>
    </bean>

    <bean id="getUserByEmailSQL" class="java.lang.String">
        <constructor-arg value="SELECT id, first_name, last_name, email, password, role
        FROM user
        WHERE email = ?;"/>
    </bean>

    <bean id="addReviewSQL" class="java.lang.String">
        <constructor-arg value="INSERT INTO review(movie_id, user_id, text)
        VALUES (?, ?, ?);"/>
    </bean>

    <bean id="deleteReviewSQL" class="java.lang.String">
        <constructor-arg value="DELETE FROM review
        WHERE id = ?;"/>
    </bean>

    <bean id="deleteReviewsForMoviesSQL" class="java.lang.String">
        <constructor-arg value="DELETE FROM review
        WHERE movie_id IN (?);"/>
    </bean>

    <bean id="checkReviewExistsSQL" class="java.lang.String">
        <constructor-arg value="SELECT COUNT(*) FROM review
        WHERE movie_id = ? AND user_id = ?;"/>
    </bean>

    <bean id="getReviewAuthorSQL" class="java.lang.String">
        <constructor-arg value="SELECT t1.id, t1.first_name, t1.last_name, t1.email, t1.password, t1.role
        FROM user t1
        JOIN review t2
        ON t1.id = t2.user_id
        WHERE t2.id = ?;"/>
    </bean>

    <bean id="getGenresSQL" class="java.lang.String">
        <constructor-arg value="SELECT id, name
        FROM genre;"/>
    </bean>

    <bean id="getGenreByIdSQL" class="java.lang.String">
        <constructor-arg value="SELECT id, name
        FROM genre
        WHERE id = ?;"/>
    </bean>

    <bean id="getGenresByMovieSQL" class="java.lang.String">
        <constructor-arg value="SELECT genre_id AS id
        FROM movie_genre
        where movie_id = ?;"/>
    </bean>

    <bean id="deleteGenreForMovieSQL" class="java.lang.String">
        <constructor-arg value="DELETE FROM movie_genre
        WHERE movie_id = ? AND genre_id = ?;"/>
    </bean>

    <bean id="deleteGenresForMoviesSQL" class="java.lang.String">
        <constructor-arg value="DELETE FROM movie_genre
        WHERE movie_id IN (?);"/>
    </bean>

    <bean id="getCountriesSQL" class="java.lang.String">
        <constructor-arg value="SELECT id, name
        FROM country;"/>
    </bean>

    <bean id="getCountryByIdSQL" class="java.lang.String">
        <constructor-arg value="SELECT id, name
        FROM country
        WHERE id = ?;"/>
    </bean>

    <bean id="getCountriesByMovieSQL" class="java.lang.String">
        <constructor-arg value="SELECT country_id AS id
        FROM movie_country
        where movie_id = ?;"/>
    </bean>

    <bean id="deleteCountryForMovieSQL" class="java.lang.String">
        <constructor-arg value="DELETE FROM movie_country
        WHERE movie_id = ? AND country_id = ?;"/>
    </bean>

    <bean id="deleteCountriesForMoviesSQL" class="java.lang.String">
        <constructor-arg value="DELETE FROM movie_country
        WHERE movie_id IN (?);"/>
    </bean>

    <bean id="getRatingSQL" class="java.lang.String">
        <constructor-arg value="SELECT movie_id, user_id, rating
        FROM rating
        WHERE movie_id = ?;"/>
    </bean>

    <bean id="addRatingSQL" class="java.lang.String">
        <constructor-arg value="INSERT INTO rating(movie_id, user_id, rating)
        VALUES (?, ?, ?);"/>
    </bean>

    <bean id="updateRatingSQL" class="java.lang.String">
        <constructor-arg value="UPDATE rating
        SET rating = ?
        WHERE movie_id = ? AND user_id = ?;"/>
    </bean>

    <bean id="avgRatingSQL" class="java.lang.String">
        <constructor-arg value="SELECT AVG(rating) from rating
        WHERE movie_id = ?;"/>
    </bean>

    <bean id="updateAvgRatingSQL" class="java.lang.String">
        <constructor-arg value="UPDATE movie
        SET rating = ?
        WHERE id = ?;"/>
    </bean>

    <bean id="addMovieSQL" class="java.lang.String">
        <constructor-arg value="INSERT INTO movie(name, name_original, release_year, description, price)
        VALUES (?, ?, ?, ?, ?);"/>
    </bean>

    <bean id="getMovieIdSQL" class="java.lang.String">
        <constructor-arg value="SELECT id from movie
        WHERE name = ? AND name_original = ? and description = ?;"/>
    </bean>

    <bean id="addMovieGenreSQL" class="java.lang.String">
        <constructor-arg value="INSERT INTO movie_genre(movie_id, genre_id)
        VALUES (?, ?);"/>
    </bean>

    <bean id="addMovieCountrySQL" class="java.lang.String">
        <constructor-arg value="INSERT INTO movie_country(movie_id, country_id)
        VALUES (?, ?);"/>
    </bean>

    <bean id="updateMovieSQL" class="java.lang.String">
        <constructor-arg value="UPDATE movie
        SET name = ?, name_original = ?, release_year = ?, description = ?, price = ?
        WHERE id = ?;"/>
    </bean>

    <bean id="deleteMoviesSQL" class="java.lang.String">
        <constructor-arg value="DELETE FROM movie
        WHERE id IN (?);"/>
    </bean>
</beans>